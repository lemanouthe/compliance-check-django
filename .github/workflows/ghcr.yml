name: This a workflow title 
on: [push] # When pushing to any branch then run this action
# Env variable
env:
  DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REGISTRY: docker.io
  IMAGE: lemanouthe/compliance-check
  WEB_IMAGE: lemanouthe/compliance-check:web
  NGINX_IMAGE: lemanouthe/compliance-check:nginx-proxy
  DATABASE: ${{secrets.DATABASE}}
  DEPLOY_PUBLIC_IP_ADDRESS: ${{secrets.DEPLOY_PUBLIC_IP_ADDRESS}}
  PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  SQL_HOST: ${{secrets.SQL_HOST}}
  SQL_PASSWORD: ${{secrets.SQL_PASSWORD}}
  SQL_PORT: ${{secrets.SQL_PORT}}
  SQL_USER: ${{secrets.SQL_USER}}
  VIRTUAL_HOST: ${{secrets.VIRTUAL_HOST}}
  VIRTUAL_PORT: ${{secrets.VIRTUAL_PORT}}

jobs:
  push-image-to-docker-hub:  # job name
    runs-on: ubuntu-latest  # runner name : (ubuntu latest version) 
    steps:
    - uses: actions/checkout@v2 # first action : checkout source code
    - name: Create env file
      run: |
        chmod +x ./setup_env.sh
        bash ./setup_env.sh
    - name: docker login
      run: | # log into docker hub account
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY
    - name: Pull Web and nginx image # push The image to the docker hub
      run: |
        docker pull $IMAGE:web || true
        docker pull $IMAGE:nginx-proxy || true
    - name: Build Web and nginx image
      run: docker-compose -f docker-compose.ci.yml build
    - name: Push to Docker Hub
      run: |
        docker push $IMAGE:web
        docker push $IMAGE:nginx-proxy
  befor-deploy:
    name: Befor deploy
    runs-on: ubuntu-latest
    needs: push-image-to-docker-hub
    steps:
      - uses: actions/checkout@v3
      - name: Create env file
        run: |
          chmod +x ./setup_env.sh
          bash ./setup_env.sh
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{secrets.DEPLOY_PUBLIC_IP_ADDRESS}}
          username: ubuntu
          key: ${{secrets.PRIVATE_KEY}}
          port: 22
          source: "./nginx, ./.env, ./.env.staging.proxy-companion, ./docker-compose.staging.yml"
          target: "/home/ubuntu/compliance_github/"
  deploy:
    runs-on: ubuntu-latest  # Utilisez l'image Ubuntu par d√©faut
    needs: befor-deploy
    steps:
      - uses: actions/checkout@v3
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DEPLOY_PUBLIC_IP_ADDRESS}}
          username: ubuntu
          key: ${{secrets.PRIVATE_KEY}}
          port: 22
          script: |
            cd /home/ubuntu/compliance_github
            export $(cat .env | xargs)
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY
            docker pull $IMAGE:web
            docker pull $IMAGE:nginx-proxy
            docker-compose -f docker-compose.staging.yml down || true
            docker rm -vf $(docker ps -aq) || true
            docker rmi -f $(docker images -aq) || true
            docker-compose -f docker-compose.staging.yml up -d