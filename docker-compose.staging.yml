version: '3.8'

services:
  web:
    image: "${WEB_IMAGE}"
    command: gunicorn compliance.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static_cdn
      - media_volume:/home/app/web/media_cdn
    expose:
      - 8000
    env_file: .env
    depends_on:
      - db
      - redis
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine 
    expose:
        - 6379
  
  nginx-proxy:
    build:
      context: ./nginx
      cache_from:
        - "${NGINX_IMAGE}"
    image: "${NGINX_IMAGE}"
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/static_cdn
      - media_volume:/home/app/web/media_cdn
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    depends_on:
      - web
    env_file: .env
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
  
  acme-companion:
    image: nginxproxy/acme-companion
    env_file: .env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  vhost:
  html:
  acme:
